# Group Harvey

Harvey API

Notes for internal API consumption via Vue.js:
[Laravel Documentation](https://laravel.com/docs/5.4/passport#consuming-your-api-with-javascript).

We make every attempt to adhere to [json-api standards](http://jsonapi.org/format/).

Suggestions or Corrections may be directed to engineers@goharvey.com.

# Group Errors
## Errors Responses [/]
All Error responses will return an appropriate status code along with a body containing an array of error objects with a key of `errors`.

Each error object contains a `title`, `type`, and `detail`.

```json
{
    "errors": [
        {
            "title": "Unauthenticated.",
            "type": "about:blank",
            "detail": "You do not have access to modify the user with id 1."
        }
    ]
}
```

# Group Auth
## Generate Auth Tokens [/oauth/token]
### Generate Auth Tokens [POST]

Get access token and refresh token for a specific user.
Client id and client secret must be provided by a Harvey administrator.

+ Request
    + Headers
        Content-Type: application/json
    + Body
        {
            "grant_type": "password",
            "client_id": 1,
            "client_secret": "0mUktabHH9evbtfoJ3Fyf9EYJ90jbVBeAMArZfsD",
            "username": "patient@goharvey.com",
            "password": "secret",
            "scope": "*"
        }
+ Response 200 (application/json)
    + Headers
    + Body
        <!-- include(responses/oauth/post-token.json) -->

# Group User
## List Users [/api/v1/users]

### List Users [GET]

View a listing of enabled users.

+ Admin required.

+ Parameters
    + per_page: `2` (number, optional) - Enables pagination and set items per page.
    + term: `john` (string, optional) - Filter results using string against 'first_name', 'last_name' and 'email' values.
    + type: `patient` (enum[string], optional) - Filter results by user type.
        + Members
            + `patient`
            + `practitioner`
            + `admin`
    + indexed: `true` (boolean, optional) - Use indexed search, faster and close match, intended for "as you type" searches.
        + default: `false`
    + include: `practitioner` (string, optional) - Join relationship data.
        + Members
            + `patient`
            + `practitioner`
+ Request
    + Headers
        Authorization: Bearer {{ ACCESS_TOKEN }}
        X-Requested-With: XMLHttpRequest
        Content-Type: application/json
+ Response 200 (application/json)
    + Headers
    + Body
        <!-- include(responses/api/v1/get-users.json) -->

## Create User [/api/v1/users]
### Create User [POST]

Create a new user. This will also create a related `patient`.

+ Parameters
    + first_name: `John` (string, required) - User First Name, 100 characters max.
    + last_name: `Doe` (string, required) - User Last Name, 100 characters max.
    + email: `jdoe@somedomain.com` (string, required) - Valid email, unique, 150 characters max.
    + password: `secret` (string, required) - 6 characters min.
    + terms: `true` (boolean, required) - Must be true.
    + zip: `90401` (number, required) - 5 digits, must be a serviceable zip.
+ Request
    + Headers
        Authorization: Bearer {{ ACCESS_TOKEN }}
        X-Requested-With: XMLHttpRequest
        Content-Type: application/json
    + Body
        {
            "first_name": "John",
            "last_name": "Doe",
            "email": "jdoe@somedomain.com",
            "password": "secret",
            "terms": true,
            "zip": 90401
        }
+ Response 200 (application/json)
    + Headers
    + Body
        <!-- include(responses/api/v1/users/get-3.json) -->

## Get User [/api/v1/users/3]
### Get User [GET]

Get a user by their ID.

+ Require Admin or current logged in user_id matching request.

+ Request
    + Headers
        Authorization: Bearer {{ ACCESS_TOKEN }}
        X-Requested-With: XMLHttpRequest
        Content-Type: application/json
+ Response 200 (application/json)
    + Headers
    + Body
        <!-- include(responses/api/v1/users/get-3.json) -->

## Update User [/api/v1/users/3]
### Update User [PATCH]

+ Require Admin or current logged in user_id matching request.

+ Parameters
    + first_name: `John` (string, optional) - User First Name, 100 characters max.
    + last_name: `Doe` (string, optional) - User Last Name, 100 characters max.
    + email: `jdoe@somedomain.com` (string, optional) - Valid email, unique, 150 characters max.
    + password: `secret` (string, optional) - 6 characters min.
    + phone: `8006909989` (number, optional) - Unique.
    + zip: `90401` (number, optional) - 5 digits, must be a serviceable zip.
+ Request
    + Headers
        Authorization: Bearer {{ ACCESS_TOKEN }}
        X-Requested-With: XMLHttpRequest
        Content-Type: application/json
+ Response 200 (application/json)
    + Headers
    + Body
        <!-- include(responses/api/v1/users/patch-3.json) -->

# Group Appointment
## List Appointments [/api/v1/appointments]

### List Appointments [GET]

View a listing of appointments associated to the authorized user (Admin role will get *all* the appointments).

+ Parameters
    + include: `patient.user` (string, optional) - Join relationship data.
        + Members
            + `patient`
            + `practitioner`
            + `patient.user`
+ Request
    + Headers
        Authorization: Bearer {{ ACCESS_TOKEN }}
        X-Requested-With: XMLHttpRequest
        Content-Type: application/json
+ Response 200 (application/json)
    + Headers
    + Body
        <!-- include(responses/api/v1/get-appointments.json) -->

## Get Appointment [/api/v1/appointments/1]
### Get Appointment [GET]
View details of a specific appointment.

+ Require Admin or current logged in User as the Practitioner or Patient involved in the appointment.

+ Parameters
    + include: `practitioner` (string, optional) - Join relationship data.
        + Members
            + `patient`
            + `practitioner`
            + `patient.user`

+ Request
    + Headers
        Authorization: Bearer {{ ACCESS_TOKEN }}
        X-Requested-With: XMLHttpRequest
        Content-Type: application/json

+ Response 200 (application/json)
    + Headers
    + Body
        <!-- include(responses/api/v1/appointments/get-1.json) -->

## Create an Appointment [/api/v1/appointments]
### Create an Appointment [POST]

+ No special role required.

+ Parameters
    + appointment_at: `2019-03-01 15:30:00` (string, required) - UTC, format "Y-m-d H:i:s", must be in the future.
    + reason_for_visit: `Why not?` (string, required)
    + practitioner_id: `1` (number, optional) - Required if admin or patient. Must be a valid ID.
    + patient_id: `1` (number, optional) - Required if admin or practitioner. Must be a valid ID.
+ Request
    + Headers
        Authorization: Bearer {{ ACCESS_TOKEN }}
        X-Requested-With: XMLHttpRequest
        Content-Type: application/json
    + Body
        {
            "appointment_at": "2019-03-01 15:30:00",
            "reason_for_visit": "Why not?",
            "practitioner_id": 1,
            "patient_id": 1
        }
+ Response 200 (application/json)
    + Headers
    + Body
        <!-- include(responses/api/v1/post-appointments.json) -->

# Group Patient
## List Patients [/api/v1/patients]
### List Patients [GET]

View a listing of enabled patients.

+ Admin or Practitioner required.

+ Parameters
    + per_page: `3` (number, optional) - Enables pagination and set items per page.
    + include: `appointments` (string, optional) - Join relationship data.
        + Members
            + `user`
            + `appointments`
+ Request
    + Headers
        Authorization: Bearer {{ ACCESS_TOKEN }}
        X-Requested-With: XMLHttpRequest
        Content-Type: application/json
+ Response 200 (application/json)
    + Headers
    + Body
        <!-- include(responses/api/v1/get-patients.json) -->

## Get Patient [/api/v1/patients/1]
### Get Patient [GET]

+ Require Admin or current logged in patient_id matching request.

+ Parameters
    + include: `user` (string, optional) - Join relationship data.
        + Members
            + `user`
            + `appointments`
+ Request
    + Headers
        Authorization: Bearer {{ ACCESS_TOKEN }}
        X-Requested-With: XMLHttpRequest
        Content-Type: application/json
+ Response 200 (application/json)
    + Headers
    + Body
        <!-- include(responses/api/v1/patients/get-1.json) -->

## Update Patient [/api/v1/patients/1]
### Update Patient [PATCH]

Update a patient&#39;s information.

+ Require Admin or current logged in patient_id matching request.

+ Parameters
    + birthdate: `1982-11-01` (string, optional) - "Y-m-d" format.
    + height_inches: `3` (number, optional) - Must be integer.
    + height_feet: `5` (number, optional) - Must be integer.
    + weight: `120` (number, optional) - Must be integer.
+ Request
    + Headers
        Authorization: Bearer {{ ACCESS_TOKEN }}
        X-Requested-With: XMLHttpRequest
        Content-Type: application/json
    + Body
        {
            "birthdate": "1984-12-19",
            "height_feet": 6,
            "height_inches": 1,
            "weight": 210
        }
+ Response 200 (application/json)
    + Headers
    + Body
        <!-- include(responses/api/v1/patients/patch-1.json) -->

# Group Test
## Get Test [/api/v1/tests/1]

### Get Test [GET]

Get test information by id.

+ Require Admin or current logged in User as the Practitioner or Patient involved in the test.

+ Request
    + Headers
        Authorization: Bearer {{ ACCESS_TOKEN }}
        X-Requested-With: XMLHttpRequest
        Content-Type: application/json
+ Response 200 (application/json)
    + Headers
    + Body
        <!-- include(responses/api/v1/tests/get-1.json) -->

## Upload Test Results [/api/v1/tests/1/results]
### Upload Test Results [POST]
Upload PDF file for test results.

+ No special role required.

+ Parameters
    + file: `results.pdf` (file, required)
+ Request
    + Headers
        Authorization: Bearer {{ ACCESS_TOKEN }}
        X-Requested-With: XMLHttpRequest
        Content-Type: application/x-www-form-urlencoded
+ Response 200 (application/json)
    + Headers
    + Body
        <!-- include(responses/api/v1/tests/1/post-results.json) -->
